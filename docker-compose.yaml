---
version: '3.2'

services:
  ci:
    build:
      context: jenkins/master
      dockerfile: Dockerfile
    image: 114151591996.dkr.ecr.eu-west-1.amazonaws.com/abmd/ci-master:latest
    user: root:users
    volumes:
      - type: bind
        source: /etc/timezone
        target: /etc/timezone:ro
      - type: bind
        source: /usr/share/zoneinfo/${TZ:-Europe/London}
        target: /usr/share/zoneinfo/${TZ:-Europe/London}
      - type: bind
        source: /usr/share/zoneinfo/${TZ:-Europe/London}
        target: /etc/localtime
      - "/var/run/docker.sock:/var/run/docker.sock:z"
      - "./ci/jobs:/var/jenkins_home/jobs"
      - "./ci/workspace:/var/jenkins_home/workspace"
    environment:
      - TZ=${TZ:-Europe/London}
      - "JAVA_OPTS=-Djenkins.install.runSetupWizard=false"
    networks:
      - abitmoredepth
    deploy:
      mode: replicated
      replicas: 0
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.middlewares.https-redirect-scheme.redirectscheme.scheme=https"
        - "traefik.http.routers.ci-router.entrypoints=http,https"
        - "traefik.http.routers.ci-router.rule=Host(`ci.abitmoredepth.com`)"
        - "traefik.http.routers.ci-router.tls.certResolver=default"
        - "traefik.http.services.ci-service.loadbalancer.server.port=8080"

  ghost:
    image: ghost:latest
    volumes:
      - ./ghost/config.production.json:/var/lib/ghost/config.production.json
      - ghost_content:/var/lib/ghost/content
    environment:
      - "database__client:mariadb"
      - "database__connection__host:mariadb"
      - "database__connection__user:ghostly"
      - "database__connection__password:ahnonotanotheroneofthosereallybastardlongpasswords..?"
      - "database__connection__database:ghost"
    networks:
      - abitmoredepth
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.middlewares.https-redirect-scheme.redirectscheme.scheme=https"
        - "traefik.http.routers.ghost-router.entrypoints=http,https"
        - "traefik.http.routers.ghost-router.rule=Host(`www.abitmoredepth.com`) || Host(`abitmoredepth.com`)"
        - "traefik.http.routers.ghost-router.tls.certResolver=default"
        - "traefik.http.services.ghost-service.loadbalancer.server.port=2368"

  mariadb:
    image: mariadb:5
    volumes:
      - maria_data:/var/lib/mysql
    environment:
      - "MYSQL_ROOT_PASSWORD=Holyfeckthisisoneofthosereallydamnablylongrootpasswords!!"
      - "MYSQL_DATABASE=ghost"
      - "MYSQL_USER=ghostly"
      - "MYSQL_PASSWORD=ahnonotanotheroneofthosereallybastardlongpasswords..?"
    networks:
      - abitmoredepth
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any

  portainer:
    image: portainer/portainer
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: volume
        source: portainer-data
        target: /data
    networks:
      - abitmoredepth
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.middlewares.https-redirect-scheme.redirectscheme.scheme=https"
        - "traefik.http.routers.portainer-router.entrypoints=http,https"
        - "traefik.http.routers.portainer-router.rule=Host(`manage.abitmoredepth.com`)"
        - "traefik.http.routers.portainer-router.tls.certResolver=default"
        - "traefik.http.services.portainer-service.loadbalancer.server.port=9000"

  # registry:
  #   image: registry:2
  #   volumes:
  #     - type: volume
  #       source: reg-data
  #       target: /var/lib/registry
  #     - type: bind
  #       source: ./registry/reg-config.yaml
  #       target: /etc/docker/registry/config.yml
  #   networks:
  #     - abitmoredepth
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     restart_policy:
  #       condition: any
  #     labels:
  #       - "traefik.backend=registry"
  #       - "traefik.enable=true"
  #       - "traefik.frontend.entryPoints=http,https"
  #       - "traefik.frontend.passHostHeader=true"
  #       - "traefik.frontend.redirect.entrypoint=https"
  #       - "traefik.frontend.rule=Host:registry.abitmoredepth.com"
  #       - "traefik.port=5000"

  # regUI:
  #   image: konradkleine/docker-registry-frontend:v2
  #   environment:
  #     - ENV_DOCKER_REGISTRY_HOST=registry
  #     - ENV_DOCKER_REGISTRY_PORT=5000
  #     - ENV_DOCKER_REGISTRY_USE_SSL=0
  #     - ENV_MODE_BROWSE_ONLY=false
  #   depends_on:
  #     - registry
  #   networks:
  #     - abitmoredepth
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     restart_policy:
  #       condition: any
  #     labels:
  #       - "traefik.backend=docker-registry-ui"
  #       - "traefik.enable=true"
  #       - "traefik.frontend.entryPoints=http,https"
  #       - "traefik.frontend.redirect.entryPoint=https"
  #       - "traefik.frontend.rule=Host:reg-ui.abitmoredepth.com"
  #       - "traefik.port=80"

  traefik:
    image: traefik:latest
    ports:
      - "443:443"
      - "8080:8080"
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yaml:/traefik.yaml
      - ./traefik/certs:/etc/traefik/acme/
      - ./traefik/auth:/etc/traefik/auth
    networks:
      - abitmoredepth
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        - "traefik.enable=true"
        - "traefik.http.middlewares.traefik-auth.digestauth.usersfile=/etc/traefik/auth"
        - "traefik.http.middlewares.https-redirect-scheme.redirectscheme.scheme=https"
        - "traefik.http.routers.traefik-router.entrypoints=http,https"
        - "traefik.http.routers.traefik-router.middlewares=traefik-auth"
        - "traefik.http.routers.traefik-router.rule=Host(`traefik.abitmoredepth.com`)"
        - "traefik.http.routers.traefik-router.service=api@internal"
        - "traefik.http.routers.traefik-router.tls.certResolver=default"
        # Dummy service for Swarm port detection. The port can be any valid integer value.
        - "traefik.http.services.traefik-service.loadbalancer.server.port=9999"

volumes:
  ghost_content:

  ghost_source:

  maria_data:

  portainer-data:

  reg-data:

networks:
  abitmoredepth:
    driver: overlay
    attachable: true
